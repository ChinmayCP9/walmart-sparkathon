# -*- coding: utf-8 -*-
"""ProvidedsalesVsTotalSales.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_GvPZ-P9jP8STs_NR0xfVCsU3eQSoyKl
"""

import pandas as pd
import json
import re
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

"""## Load Data"""

df = pd.read_csv('https://raw.githubusercontent.com/VarunPalrecha/DataSets/main/output1.csv')
print(df)


"""## Data Prepration.

## Data Seperation as X and Y.
"""

X = df[['sales_month1', 'sales_month2', 'sales_month3', 'sales_totalsales']].values

print(X)
X

df['sales'] = df[['sales_month1', 'sales_month2', 'sales_month3']].sum(axis=1)
y = df['sales'].values
print(y)
y

"""## Data Splitting"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""## Create and train the linear regression model"""

model = LinearRegression()
model.fit(X_train, y_train)

"""## Make predictions on the testing data"""

y_pred = model.predict(X_test)
print(y_pred)
y_pred

"""## Calculate RMSE"""

rmse = mean_squared_error(y_test, y_pred, squared=False)
print(f'Root Mean Squared Error: {rmse}')

"""##  You can now use the trained model to predict sales for new feature values"""

new_features = [[51, 97, 21, 183]]  # Example new feature values
predicted_sales = model.predict(new_features)
print(f'Predicted Sales for New Feature Values: {predicted_sales[0]}')